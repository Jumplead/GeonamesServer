<!DOCTYPE html><html><head><title></title><link type="text/css" rel="stylesheet" href="http://jasonm23.github.com/markdown-css-themes/swiss.css"></head><body><div>Loading...</div><textarea id="mdstr" style=display:none># GeonamesServer

A node.js server used to get the biggest or the closest cities based on a given HTTP request.

## Documentation

Read The Documentation at [Read The Docs !](https://geonames-server.readthedocs.org/)


## Routes

The following is a list of usable routes for the Geonames server:

### /

Returns a quick documentation listing available routes.

### /city

Returns the list of all the cities in the database, limited to 30 results by
default.
The default limit can be changed within the **vars.js** file.

#### Parameters

  - sort (mandatory, default value : population)
    available values :
    - population : The results will be sorted by population.
    - closeness : The results will be sorted by closeness to the place the
request was sent from.
    - ip : The results will be sorted by closeness to the provided ip.
The provided ip must be given in sortParams query parameter which is an
associative array. Example : /city?name=paris&amp;sort=ip&amp;sortParams[ip]=1.1.1.1
  - ord (mandatory, default value : desc)
    available values :
    - desc : The results will be displayed in descending order.
    - asc : The results will be displayed in ascending order.
  - name (optional) : Filters city by a given name.
  - ip (optional) : Find the city in which the given ip address is located.
'ip' parameter can not be set within a 'name' parameter.
  - country (optional) :
    Only cities located in countries whose name begins with this parameter will be returned.
  - limit (optional) : The number of results.


### /city/{id}

Returns the city which *geonameid* value is equal to the given id.


All these routes can only be accessed through GET requests. Any other methods will result in a
*405 Method not allowed* error. The results will be sent as text/XML or text/JSON files, according
to the accept field within the request header. If the *sort* parameter is specified and set to *closeness*
but the location of the request could not be detetermined (due to a lack of data within the geoip database
or geoip module not being installed), default values of 0,0 will be used instead. If a mandatory parameter,
such as *sort* is used with a value not included in the list of available values, the request will result
in a *400 Bad request* error.

## Accepted content types

GeonamesServer can return data formated in two types, **json** or **xml**, according to the type specified
within the header request (see http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). The server supports
qvalue ratings, choosing the return type by its rating. If * is specified, data will be returned as a
**json** document. If neither **xml**, **json** nor * are specified, the server will answer with a
*406 Not acceptable* error.

### Examples of response

Following are the results returned for the request */search/query=york&amp;country=aus*

##### xml

    &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
        &lt;geonames&gt;
            &lt;totalResultsCount&gt;2&lt;/totalResultsCount&gt;
            &lt;geoname&gt;
                &lt;geonameid&gt;2206601&lt;/geonameid&gt;
                &lt;title&gt;Yorkeys Knob&lt;/title&gt;
                &lt;title_match&gt;York&lt;/title_match&gt;
                &lt;country&gt;Australia&lt;/country&gt;
                &lt;country_match&gt;Aus&lt;/country_match&gt;
                &lt;region&gt;Queensland&lt;/region&gt;
            &lt;/geoname&gt;
            &lt;geoname&gt;
                &lt;geonameid&gt;2057277&lt;/geonameid&gt;
                &lt;title&gt;York&lt;/title&gt;
                &lt;title_match&gt;York&lt;/title_match&gt;
                &lt;country&gt;Australia&lt;/country&gt;
                &lt;country_match&gt;Aus&lt;/country_match&gt;
                &lt;region&gt;Western Australia&lt;/region&gt;
            &lt;/geoname&gt;
        &lt;/geonames&gt;

#### json

    {
     &quot;geonames&quot;: {
        &quot;totalResultsCount&quot;:2,
        &quot;geoname&quot;:[
            {
                &quot;geonameid&quot;: &quot;2206601&quot;,
                &quot;title&quot;: &quot;Yorkeys Knob&quot;,
                &quot;country&quot;: &quot;Australia&quot;,
                &quot;match&quot;: {
                  &quot;title&quot;: &quot;York&quot;,
                  &quot;country&quot;: &quot;Aus&quot;
                },
                &quot;title_alt&quot;: &quot;yorkeys knob&quot;,
                &quot;region&quot;: &quot;Queensland&quot;,
                &quot;population&quot;: 2645,
                &quot;latitude&quot;: -16.81667,
                &quot;longitude&quot;: 145.71667,
                &quot;names&quot;: [
                    &quot;yorkeys knob&quot;,
                    &quot;yorkeys knob&quot;,
                    &quot;yorkeys knob beach&quot;
                ]
            },
            {
                &quot;geonameid&quot;: &quot;2057277&quot;,
                &quot;title&quot;: &quot;York&quot;,
                &quot;country&quot;: &quot;Australia&quot;,
                &quot;match&quot;: {
                  &quot;title&quot;: &quot;York&quot;,
                  &quot;country&quot;: &quot;Aus&quot;
                },
                &quot;title_alt&quot;: &quot;york&quot;,
                &quot;region&quot;: &quot;Western Australia&quot;,
                &quot;population&quot;: 2090,
                &quot;latitude&quot;: -31.88467,
                &quot;longitude&quot;: 116.76874,
                &quot;names&quot;: [
                    &quot;york&quot;,
                    &quot;jork&quot;,
                    &quot;york&quot;,
                    &quot;йорк&quot;
                ]
            }
        ]
     }
    }


## License

This project is licensed under the [MIT license](http://opensource.org/licenses/MIT).


</textarea><script src="https://raw.github.com/evilstreak/markdown-js/master/lib/markdown.js"></script><script>var mdstr = document.getElementById('mdstr').value;
var html = markdown.toHTML(mdstr);
document.body.innerHTML = html;</script></body></html>